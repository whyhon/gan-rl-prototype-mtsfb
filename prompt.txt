"I want to build a simplified GAN-RL Red Teaming Framework implemented in Python for a Windows 11 PC with 8GB RAM. The goal is to test a small AI language model Ollama gemma3:270m via its local interface.
Please help me write code components that:
Create a simple Generative Adversarial Network (GAN) to generate adversarial text inputs that might cause the target AI model to fail or respond incorrectly.
Implement a reinforcement learning (RL) strategy that iteratively improves the adversarial input generation based on feedback from the model's output.
Connect to the Ollama gemma3:270m model through its local runtime to send generated inputs and receive responses.
Evaluate the modelâ€™s responses for signs of failure, such as incorrect or biased answers, or harmful outputs, with simple heuristic rules.
Log the results and generate a report summarizing the adversarial tests, including successful attacks and failure modes discovered.
Use lightweight libraries and efficient code suited for the limited hardware (Windows 11 PC with 8GB RAM).
Please provide the Python code in logical blocks with explanations for each part, focusing on clarity and modularity for easy understanding and future enhancement."